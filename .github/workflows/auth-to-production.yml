name: Auth CD

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: startsWith(github.head_ref, 'auth/') == true
    defaults:
      run:
        shell: bash
        working-directory: auth

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn with frozen lockfile
        run: yarn install --frozen-lockfile
      - name: Build docker image
        env:
          MONGO_DB_CLOUD_KEY: ${{ secrets.MONGO_DB_CLOUD_KEY }}
        run: yarn build:docker
      - name: Login to Heroku Container registry
        run: heroku container:login
      - name: Build and push
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      - name: Release
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
      # - uses: akhileshns/heroku-deploy@v3.10.9
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: "poletas"
      #     heroku_email: ${{secrets.EMAIL}}
      #     appdir: "./auth"
      #     usedocker: true
      #     docker_build_args: |
      #       NODE_ENV
      #       SECRET_KEY
      #   env:
      #     NODE_ENV: production
      #     MONGODB_CLOUD_KEY: ${{ secrets.MONGODB_CLOUD_KEY }}
